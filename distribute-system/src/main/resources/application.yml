etcd:
  endpoints: http://localhost:2379
  connection:
    timeout: 5000
    retry:
      max-attempts: 3
      initial-backoff: 1000
      max-backoff: 5000
      multiplier: 2.0
  test:
    database:
      replace: none

server:
  port: 7071

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
    health:
      show-details: always
      probes:
        enabled: true
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
        descriptions: true
        step: 1m

spring:
  application:
    name: order-service
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: order-group
      auto-offset-reset: earliest
      enable-auto-commit: true
      auto-commit-interval: 1000
      max-poll-records: 1000
      fetch-max-bytes: 52428800
      max-partition-fetch-bytes: 1048576
      session-timeout-ms: 30000
      heartbeat-interval-ms: 10000
    listener:
      type: batch
      concurrency: 10
      poll-timeout: 3000
      ack-mode: batch

  datasource:
    url: jdbc:postgresql://localhost:5432/ordertest
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: 123

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

kafka:
  topic:
    orders: orders
